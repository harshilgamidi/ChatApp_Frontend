{"ast":null,"code":"var _classCallCheck = require(\"C:/VideoChat/video-group-meeting-master/video-group-meeting-master/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/VideoChat/video-group-meeting-master/video-group-meeting-master/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _possibleConstructorReturn = require(\"C:/VideoChat/video-group-meeting-master/video-group-meeting-master/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\").default;\nvar _inherits = require(\"C:/VideoChat/video-group-meeting-master/video-group-meeting-master/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/VideoChat/video-group-meeting-master/video-group-meeting-master/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n/*! simple-peer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nvar debug = require('debug')('simple-peer');\nvar getBrowserRTC = require('get-browser-rtc');\nvar randombytes = require('randombytes');\nvar stream = require('readable-stream');\nvar queueMicrotask = require('queue-microtask'); // TODO: remove when Node 10 is not supported\nvar errCode = require('err-code');\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar MAX_BUFFERED_AMOUNT = 64 * 1024;\nvar ICECOMPLETE_TIMEOUT = 5 * 1000;\nvar CHANNEL_CLOSING_TIMEOUT = 5 * 1000;\n\n// HACK: Filter trickle lines when trickle is disabled #354\nfunction filterTrickle(sdp) {\n  return sdp.replace(/a=ice-options:trickle\\s\\n/g, '');\n}\nfunction warn(message) {\n  console.warn(message);\n}\n\n/**\n * WebRTC peer connection. Same API as node core `net.Socket`, plus a few extra methods.\n * Duplex stream.\n * @param {Object} opts\n */\nvar Peer = /*#__PURE__*/function (_stream$Duplex) {\n  \"use strict\";\n\n  _inherits(Peer, _stream$Duplex);\n  var _super = _createSuper(Peer);\n  function Peer(opts) {\n    var _this;\n    _classCallCheck(this, Peer);\n    opts = Object.assign({\n      allowHalfOpen: false\n    }, opts);\n    _this = _super.call(this, opts);\n    _this._id = randombytes(4).toString('hex').slice(0, 7);\n    _this._debug('new peer %o', opts);\n    _this.channelName = opts.initiator ? opts.channelName || randombytes(20).toString('hex') : null;\n    _this.initiator = opts.initiator || false;\n    _this.channelConfig = opts.channelConfig || Peer.channelConfig;\n    _this.channelNegotiated = _this.channelConfig.negotiated;\n    _this.config = Object.assign({}, Peer.config, opts.config);\n    _this.offerOptions = opts.offerOptions || {};\n    _this.answerOptions = opts.answerOptions || {};\n    _this.sdpTransform = opts.sdpTransform || function (sdp) {\n      return sdp;\n    };\n    _this.streams = opts.streams || (opts.stream ? [opts.stream] : []); // support old \"stream\" option\n    _this.trickle = opts.trickle !== undefined ? opts.trickle : true;\n    _this.allowHalfTrickle = opts.allowHalfTrickle !== undefined ? opts.allowHalfTrickle : false;\n    _this.iceCompleteTimeout = opts.iceCompleteTimeout || ICECOMPLETE_TIMEOUT;\n    _this.destroyed = false;\n    _this.destroying = false;\n    _this._connected = false;\n    _this.remoteAddress = undefined;\n    _this.remoteFamily = undefined;\n    _this.remotePort = undefined;\n    _this.localAddress = undefined;\n    _this.localFamily = undefined;\n    _this.localPort = undefined;\n    _this._wrtc = opts.wrtc && typeof opts.wrtc === 'object' ? opts.wrtc : getBrowserRTC();\n    if (!_this._wrtc) {\n      if (typeof window === 'undefined') {\n        throw errCode(new Error('No WebRTC support: Specify `opts.wrtc` option in this environment'), 'ERR_WEBRTC_SUPPORT');\n      } else {\n        throw errCode(new Error('No WebRTC support: Not a supported browser'), 'ERR_WEBRTC_SUPPORT');\n      }\n    }\n    _this._pcReady = false;\n    _this._channelReady = false;\n    _this._iceComplete = false; // ice candidate trickle done (got null candidate)\n    _this._iceCompleteTimer = null; // send an offer/answer anyway after some timeout\n    _this._channel = null;\n    _this._pendingCandidates = [];\n    _this._isNegotiating = false; // is this peer waiting for negotiation to complete?\n    _this._firstNegotiation = true;\n    _this._batchedNegotiation = false; // batch synchronous negotiations\n    _this._queuedNegotiation = false; // is there a queued negotiation request?\n    _this._sendersAwaitingStable = [];\n    _this._senderMap = new Map();\n    _this._closingInterval = null;\n    _this._remoteTracks = [];\n    _this._remoteStreams = [];\n    _this._chunk = null;\n    _this._cb = null;\n    _this._interval = null;\n    try {\n      _this._pc = new _this._wrtc.RTCPeerConnection(_this.config);\n    } catch (err) {\n      _this.destroy(errCode(err, 'ERR_PC_CONSTRUCTOR'));\n      return _possibleConstructorReturn(_this);\n    }\n\n    // We prefer feature detection whenever possible, but sometimes that's not\n    // possible for certain implementations.\n    _this._isReactNativeWebrtc = typeof _this._pc._peerConnectionId === 'number';\n    _this._pc.oniceconnectionstatechange = function () {\n      _this._onIceStateChange();\n    };\n    _this._pc.onicegatheringstatechange = function () {\n      _this._onIceStateChange();\n    };\n    _this._pc.onconnectionstatechange = function () {\n      _this._onConnectionStateChange();\n    };\n    _this._pc.onsignalingstatechange = function () {\n      _this._onSignalingStateChange();\n    };\n    _this._pc.onicecandidate = function (event) {\n      _this._onIceCandidate(event);\n    };\n\n    // HACK: Fix for odd Firefox behavior, see: https://github.com/feross/simple-peer/pull/783\n    if (typeof _this._pc.peerIdentity === 'object') {\n      _this._pc.peerIdentity.catch(function (err) {\n        _this.destroy(errCode(err, 'ERR_PC_PEER_IDENTITY'));\n      });\n    }\n\n    // Other spec events, unused by this implementation:\n    // - onconnectionstatechange\n    // - onicecandidateerror\n    // - onfingerprintfailure\n    // - onnegotiationneeded\n\n    if (_this.initiator || _this.channelNegotiated) {\n      _this._setupData({\n        channel: _this._pc.createDataChannel(_this.channelName, _this.channelConfig)\n      });\n    } else {\n      _this._pc.ondatachannel = function (event) {\n        _this._setupData(event);\n      };\n    }\n    if (_this.streams) {\n      _this.streams.forEach(function (stream) {\n        _this.addStream(stream);\n      });\n    }\n    _this._pc.ontrack = function (event) {\n      _this._onTrack(event);\n    };\n    _this._debug('initial negotiation');\n    _this._needsNegotiation();\n    _this._onFinishBound = function () {\n      _this._onFinish();\n    };\n    _this.once('finish', _this._onFinishBound);\n    return _this;\n  }\n  _createClass(Peer, [{\n    key: \"bufferSize\",\n    get: function get() {\n      return this._channel && this._channel.bufferedAmount || 0;\n    }\n\n    // HACK: it's possible channel.readyState is \"closing\" before peer.destroy() fires\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return this._connected && this._channel.readyState === 'open';\n    }\n  }, {\n    key: \"address\",\n    value: function address() {\n      return {\n        port: this.localPort,\n        family: this.localFamily,\n        address: this.localAddress\n      };\n    }\n  }, {\n    key: \"signal\",\n    value: function signal(data) {\n      var _this2 = this;\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot signal after peer is destroyed'), 'ERR_DESTROYED');\n      if (typeof data === 'string') {\n        try {\n          data = JSON.parse(data);\n        } catch (err) {\n          data = {};\n        }\n      }\n      this._debug('signal()');\n      if (data.renegotiate && this.initiator) {\n        this._debug('got request to renegotiate');\n        this._needsNegotiation();\n      }\n      if (data.transceiverRequest && this.initiator) {\n        this._debug('got request for transceiver');\n        this.addTransceiver(data.transceiverRequest.kind, data.transceiverRequest.init);\n      }\n      if (data.candidate) {\n        if (this._pc.remoteDescription && this._pc.remoteDescription.type) {\n          this._addIceCandidate(data.candidate);\n        } else {\n          this._pendingCandidates.push(data.candidate);\n        }\n      }\n      if (data.sdp) {\n        this._pc.setRemoteDescription(new this._wrtc.RTCSessionDescription(data)).then(function () {\n          if (_this2.destroyed) return;\n          _this2._pendingCandidates.forEach(function (candidate) {\n            _this2._addIceCandidate(candidate);\n          });\n          _this2._pendingCandidates = [];\n          if (_this2._pc.remoteDescription.type === 'offer') _this2._createAnswer();\n        }).catch(function (err) {\n          _this2.destroy(errCode(err, 'ERR_SET_REMOTE_DESCRIPTION'));\n        });\n      }\n      if (!data.sdp && !data.candidate && !data.renegotiate && !data.transceiverRequest) {\n        this.destroy(errCode(new Error('signal() called with invalid signal data'), 'ERR_SIGNALING'));\n      }\n    }\n  }, {\n    key: \"_addIceCandidate\",\n    value: function _addIceCandidate(candidate) {\n      var _this3 = this;\n      var iceCandidateObj = new this._wrtc.RTCIceCandidate(candidate);\n      this._pc.addIceCandidate(iceCandidateObj).catch(function (err) {\n        if (!iceCandidateObj.address || iceCandidateObj.address.endsWith('.local')) {\n          warn('Ignoring unsupported ICE candidate.');\n        } else {\n          _this3.destroy(errCode(err, 'ERR_ADD_ICE_CANDIDATE'));\n        }\n      });\n    }\n\n    /**\n     * Send text/binary data to the remote peer.\n     * @param {ArrayBufferView|ArrayBuffer|Buffer|string|Blob} chunk\n     */\n  }, {\n    key: \"send\",\n    value: function send(chunk) {\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot send after peer is destroyed'), 'ERR_DESTROYED');\n      this._channel.send(chunk);\n    }\n\n    /**\n     * Add a Transceiver to the connection.\n     * @param {String} kind\n     * @param {Object} init\n     */\n  }, {\n    key: \"addTransceiver\",\n    value: function addTransceiver(kind, init) {\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot addTransceiver after peer is destroyed'), 'ERR_DESTROYED');\n      this._debug('addTransceiver()');\n      if (this.initiator) {\n        try {\n          this._pc.addTransceiver(kind, init);\n          this._needsNegotiation();\n        } catch (err) {\n          this.destroy(errCode(err, 'ERR_ADD_TRANSCEIVER'));\n        }\n      } else {\n        this.emit('signal', {\n          // request initiator to renegotiate\n          type: 'transceiverRequest',\n          transceiverRequest: {\n            kind: kind,\n            init: init\n          }\n        });\n      }\n    }\n\n    /**\n     * Add a MediaStream to the connection.\n     * @param {MediaStream} stream\n     */\n  }, {\n    key: \"addStream\",\n    value: function addStream(stream) {\n      var _this4 = this;\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot addStream after peer is destroyed'), 'ERR_DESTROYED');\n      this._debug('addStream()');\n      stream.getTracks().forEach(function (track) {\n        _this4.addTrack(track, stream);\n      });\n    }\n\n    /**\n     * Add a MediaStreamTrack to the connection.\n     * @param {MediaStreamTrack} track\n     * @param {MediaStream} stream\n     */\n  }, {\n    key: \"addTrack\",\n    value: function addTrack(track, stream) {\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot addTrack after peer is destroyed'), 'ERR_DESTROYED');\n      this._debug('addTrack()');\n      var submap = this._senderMap.get(track) || new Map(); // nested Maps map [track, stream] to sender\n      var sender = submap.get(stream);\n      if (!sender) {\n        sender = this._pc.addTrack(track, stream);\n        submap.set(stream, sender);\n        this._senderMap.set(track, submap);\n        this._needsNegotiation();\n      } else if (sender.removed) {\n        throw errCode(new Error('Track has been removed. You should enable/disable tracks that you want to re-add.'), 'ERR_SENDER_REMOVED');\n      } else {\n        throw errCode(new Error('Track has already been added to that stream.'), 'ERR_SENDER_ALREADY_ADDED');\n      }\n    }\n\n    /**\n     * Replace a MediaStreamTrack by another in the connection.\n     * @param {MediaStreamTrack} oldTrack\n     * @param {MediaStreamTrack} newTrack\n     * @param {MediaStream} stream\n     */\n  }, {\n    key: \"replaceTrack\",\n    value: function replaceTrack(oldTrack, newTrack, stream) {\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot replaceTrack after peer is destroyed'), 'ERR_DESTROYED');\n      this._debug('replaceTrack()');\n      var submap = this._senderMap.get(oldTrack);\n      var sender = submap ? submap.get(stream) : null;\n      if (!sender) {\n        throw errCode(new Error('Cannot replace track that was never added.'), 'ERR_TRACK_NOT_ADDED');\n      }\n      if (newTrack) this._senderMap.set(newTrack, submap);\n      if (sender.replaceTrack != null) {\n        sender.replaceTrack(newTrack);\n      } else {\n        this.destroy(errCode(new Error('replaceTrack is not supported in this browser'), 'ERR_UNSUPPORTED_REPLACETRACK'));\n      }\n    }\n\n    /**\n     * Remove a MediaStreamTrack from the connection.\n     * @param {MediaStreamTrack} track\n     * @param {MediaStream} stream\n     */\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track, stream) {\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot removeTrack after peer is destroyed'), 'ERR_DESTROYED');\n      this._debug('removeSender()');\n      var submap = this._senderMap.get(track);\n      var sender = submap ? submap.get(stream) : null;\n      if (!sender) {\n        throw errCode(new Error('Cannot remove track that was never added.'), 'ERR_TRACK_NOT_ADDED');\n      }\n      try {\n        sender.removed = true;\n        this._pc.removeTrack(sender);\n      } catch (err) {\n        if (err.name === 'NS_ERROR_UNEXPECTED') {\n          this._sendersAwaitingStable.push(sender); // HACK: Firefox must wait until (signalingState === stable) https://bugzilla.mozilla.org/show_bug.cgi?id=1133874\n        } else {\n          this.destroy(errCode(err, 'ERR_REMOVE_TRACK'));\n        }\n      }\n      this._needsNegotiation();\n    }\n\n    /**\n     * Remove a MediaStream from the connection.\n     * @param {MediaStream} stream\n     */\n  }, {\n    key: \"removeStream\",\n    value: function removeStream(stream) {\n      var _this5 = this;\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot removeStream after peer is destroyed'), 'ERR_DESTROYED');\n      this._debug('removeSenders()');\n      stream.getTracks().forEach(function (track) {\n        _this5.removeTrack(track, stream);\n      });\n    }\n  }, {\n    key: \"_needsNegotiation\",\n    value: function _needsNegotiation() {\n      var _this6 = this;\n      this._debug('_needsNegotiation');\n      if (this._batchedNegotiation) return; // batch synchronous renegotiations\n      this._batchedNegotiation = true;\n      queueMicrotask(function () {\n        _this6._batchedNegotiation = false;\n        if (_this6.initiator || !_this6._firstNegotiation) {\n          _this6._debug('starting batched negotiation');\n          _this6.negotiate();\n        } else {\n          _this6._debug('non-initiator initial negotiation request discarded');\n        }\n        _this6._firstNegotiation = false;\n      });\n    }\n  }, {\n    key: \"negotiate\",\n    value: function negotiate() {\n      var _this7 = this;\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot negotiate after peer is destroyed'), 'ERR_DESTROYED');\n      if (this.initiator) {\n        if (this._isNegotiating) {\n          this._queuedNegotiation = true;\n          this._debug('already negotiating, queueing');\n        } else {\n          this._debug('start negotiation');\n          setTimeout(function () {\n            // HACK: Chrome crashes if we immediately call createOffer\n            _this7._createOffer();\n          }, 0);\n        }\n      } else {\n        if (this._isNegotiating) {\n          this._queuedNegotiation = true;\n          this._debug('already negotiating, queueing');\n        } else {\n          this._debug('requesting negotiation from initiator');\n          this.emit('signal', {\n            // request initiator to renegotiate\n            type: 'renegotiate',\n            renegotiate: true\n          });\n        }\n      }\n      this._isNegotiating = true;\n    }\n\n    // TODO: Delete this method once readable-stream is updated to contain a default\n    // implementation of destroy() that automatically calls _destroy()\n    // See: https://github.com/nodejs/readable-stream/issues/283\n  }, {\n    key: \"destroy\",\n    value: function destroy(err) {\n      this._destroy(err, function () {});\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy(err, cb) {\n      var _this8 = this;\n      if (this.destroyed || this.destroying) return;\n      this.destroying = true;\n      this._debug('destroying (error: %s)', err && (err.message || err));\n      queueMicrotask(function () {\n        // allow events concurrent with the call to _destroy() to fire (see #692)\n        _this8.destroyed = true;\n        _this8.destroying = false;\n        _this8._debug('destroy (error: %s)', err && (err.message || err));\n        _this8.readable = _this8.writable = false;\n        if (!_this8._readableState.ended) _this8.push(null);\n        if (!_this8._writableState.finished) _this8.end();\n        _this8._connected = false;\n        _this8._pcReady = false;\n        _this8._channelReady = false;\n        _this8._remoteTracks = null;\n        _this8._remoteStreams = null;\n        _this8._senderMap = null;\n        clearInterval(_this8._closingInterval);\n        _this8._closingInterval = null;\n        clearInterval(_this8._interval);\n        _this8._interval = null;\n        _this8._chunk = null;\n        _this8._cb = null;\n        if (_this8._onFinishBound) _this8.removeListener('finish', _this8._onFinishBound);\n        _this8._onFinishBound = null;\n        if (_this8._channel) {\n          try {\n            _this8._channel.close();\n          } catch (err) {}\n\n          // allow events concurrent with destruction to be handled\n          _this8._channel.onmessage = null;\n          _this8._channel.onopen = null;\n          _this8._channel.onclose = null;\n          _this8._channel.onerror = null;\n        }\n        if (_this8._pc) {\n          try {\n            _this8._pc.close();\n          } catch (err) {}\n\n          // allow events concurrent with destruction to be handled\n          _this8._pc.oniceconnectionstatechange = null;\n          _this8._pc.onicegatheringstatechange = null;\n          _this8._pc.onsignalingstatechange = null;\n          _this8._pc.onicecandidate = null;\n          _this8._pc.ontrack = null;\n          _this8._pc.ondatachannel = null;\n        }\n        _this8._pc = null;\n        _this8._channel = null;\n        if (err) _this8.emit('error', err);\n        _this8.emit('close');\n        cb();\n      });\n    }\n  }, {\n    key: \"_setupData\",\n    value: function _setupData(event) {\n      var _this9 = this;\n      if (!event.channel) {\n        // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n        // which is invalid behavior. Handle it gracefully.\n        // See: https://github.com/feross/simple-peer/issues/163\n        return this.destroy(errCode(new Error('Data channel event is missing `channel` property'), 'ERR_DATA_CHANNEL'));\n      }\n      this._channel = event.channel;\n      this._channel.binaryType = 'arraybuffer';\n      if (typeof this._channel.bufferedAmountLowThreshold === 'number') {\n        this._channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT;\n      }\n      this.channelName = this._channel.label;\n      this._channel.onmessage = function (event) {\n        _this9._onChannelMessage(event);\n      };\n      this._channel.onbufferedamountlow = function () {\n        _this9._onChannelBufferedAmountLow();\n      };\n      this._channel.onopen = function () {\n        _this9._onChannelOpen();\n      };\n      this._channel.onclose = function () {\n        _this9._onChannelClose();\n      };\n      this._channel.onerror = function (event) {\n        var err = event.error instanceof Error ? event.error : new Error(\"Datachannel error: \".concat(event.message, \" \").concat(event.filename, \":\").concat(event.lineno, \":\").concat(event.colno));\n        _this9.destroy(errCode(err, 'ERR_DATA_CHANNEL'));\n      };\n\n      // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n      var isClosing = false;\n      this._closingInterval = setInterval(function () {\n        // No \"onclosing\" event\n        if (_this9._channel && _this9._channel.readyState === 'closing') {\n          if (isClosing) _this9._onChannelClose(); // closing timed out: equivalent to onclose firing\n          isClosing = true;\n        } else {\n          isClosing = false;\n        }\n      }, CHANNEL_CLOSING_TIMEOUT);\n    }\n  }, {\n    key: \"_read\",\n    value: function _read() {}\n  }, {\n    key: \"_write\",\n    value: function _write(chunk, encoding, cb) {\n      if (this.destroyed) return cb(errCode(new Error('cannot write after peer is destroyed'), 'ERR_DATA_CHANNEL'));\n      if (this._connected) {\n        try {\n          this.send(chunk);\n        } catch (err) {\n          return this.destroy(errCode(err, 'ERR_DATA_CHANNEL'));\n        }\n        if (this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n          this._debug('start backpressure: bufferedAmount %d', this._channel.bufferedAmount);\n          this._cb = cb;\n        } else {\n          cb(null);\n        }\n      } else {\n        this._debug('write before connect');\n        this._chunk = chunk;\n        this._cb = cb;\n      }\n    }\n\n    // When stream finishes writing, close socket. Half open connections are not\n    // supported.\n  }, {\n    key: \"_onFinish\",\n    value: function _onFinish() {\n      var _this10 = this;\n      if (this.destroyed) return;\n\n      // Wait a bit before destroying so the socket flushes.\n      // TODO: is there a more reliable way to accomplish this?\n      var destroySoon = function destroySoon() {\n        setTimeout(function () {\n          return _this10.destroy();\n        }, 1000);\n      };\n      if (this._connected) {\n        destroySoon();\n      } else {\n        this.once('connect', destroySoon);\n      }\n    }\n  }, {\n    key: \"_startIceCompleteTimeout\",\n    value: function _startIceCompleteTimeout() {\n      var _this11 = this;\n      if (this.destroyed) return;\n      if (this._iceCompleteTimer) return;\n      this._debug('started iceComplete timeout');\n      this._iceCompleteTimer = setTimeout(function () {\n        if (!_this11._iceComplete) {\n          _this11._iceComplete = true;\n          _this11._debug('iceComplete timeout completed');\n          _this11.emit('iceTimeout');\n          _this11.emit('_iceComplete');\n        }\n      }, this.iceCompleteTimeout);\n    }\n  }, {\n    key: \"_createOffer\",\n    value: function _createOffer() {\n      var _this12 = this;\n      if (this.destroyed) return;\n      this._pc.createOffer(this.offerOptions).then(function (offer) {\n        if (_this12.destroyed) return;\n        if (!_this12.trickle && !_this12.allowHalfTrickle) offer.sdp = filterTrickle(offer.sdp);\n        offer.sdp = _this12.sdpTransform(offer.sdp);\n        var sendOffer = function sendOffer() {\n          if (_this12.destroyed) return;\n          var signal = _this12._pc.localDescription || offer;\n          _this12._debug('signal');\n          _this12.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          });\n        };\n        var onSuccess = function onSuccess() {\n          _this12._debug('createOffer success');\n          if (_this12.destroyed) return;\n          if (_this12.trickle || _this12._iceComplete) sendOffer();else _this12.once('_iceComplete', sendOffer); // wait for candidates\n        };\n\n        var onError = function onError(err) {\n          _this12.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'));\n        };\n        _this12._pc.setLocalDescription(offer).then(onSuccess).catch(onError);\n      }).catch(function (err) {\n        _this12.destroy(errCode(err, 'ERR_CREATE_OFFER'));\n      });\n    }\n  }, {\n    key: \"_requestMissingTransceivers\",\n    value: function _requestMissingTransceivers() {\n      var _this13 = this;\n      if (this._pc.getTransceivers) {\n        this._pc.getTransceivers().forEach(function (transceiver) {\n          if (!transceiver.mid && transceiver.sender.track && !transceiver.requested) {\n            transceiver.requested = true; // HACK: Safari returns negotiated transceivers with a null mid\n            _this13.addTransceiver(transceiver.sender.track.kind);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_createAnswer\",\n    value: function _createAnswer() {\n      var _this14 = this;\n      if (this.destroyed) return;\n      this._pc.createAnswer(this.answerOptions).then(function (answer) {\n        if (_this14.destroyed) return;\n        if (!_this14.trickle && !_this14.allowHalfTrickle) answer.sdp = filterTrickle(answer.sdp);\n        answer.sdp = _this14.sdpTransform(answer.sdp);\n        var sendAnswer = function sendAnswer() {\n          if (_this14.destroyed) return;\n          var signal = _this14._pc.localDescription || answer;\n          _this14._debug('signal');\n          _this14.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          });\n          if (!_this14.initiator) _this14._requestMissingTransceivers();\n        };\n        var onSuccess = function onSuccess() {\n          if (_this14.destroyed) return;\n          if (_this14.trickle || _this14._iceComplete) sendAnswer();else _this14.once('_iceComplete', sendAnswer);\n        };\n        var onError = function onError(err) {\n          _this14.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'));\n        };\n        _this14._pc.setLocalDescription(answer).then(onSuccess).catch(onError);\n      }).catch(function (err) {\n        _this14.destroy(errCode(err, 'ERR_CREATE_ANSWER'));\n      });\n    }\n  }, {\n    key: \"_onConnectionStateChange\",\n    value: function _onConnectionStateChange() {\n      if (this.destroyed) return;\n      if (this._pc.connectionState === 'failed') {\n        this.destroy(errCode(new Error('Connection failed.'), 'ERR_CONNECTION_FAILURE'));\n      }\n    }\n  }, {\n    key: \"_onIceStateChange\",\n    value: function _onIceStateChange() {\n      if (this.destroyed) return;\n      var iceConnectionState = this._pc.iceConnectionState;\n      var iceGatheringState = this._pc.iceGatheringState;\n      this._debug('iceStateChange (connection: %s) (gathering: %s)', iceConnectionState, iceGatheringState);\n      this.emit('iceStateChange', iceConnectionState, iceGatheringState);\n      if (iceConnectionState === 'connected' || iceConnectionState === 'completed') {\n        this._pcReady = true;\n        this._maybeReady();\n      }\n      if (iceConnectionState === 'failed') {\n        this.destroy(errCode(new Error('Ice connection failed.'), 'ERR_ICE_CONNECTION_FAILURE'));\n      }\n      if (iceConnectionState === 'closed') {\n        this.destroy(errCode(new Error('Ice connection closed.'), 'ERR_ICE_CONNECTION_CLOSED'));\n      }\n    }\n  }, {\n    key: \"getStats\",\n    value: function getStats(cb) {\n      var _this15 = this;\n      // statreports can come with a value array instead of properties\n      var flattenValues = function flattenValues(report) {\n        if (Object.prototype.toString.call(report.values) === '[object Array]') {\n          report.values.forEach(function (value) {\n            Object.assign(report, value);\n          });\n        }\n        return report;\n      };\n\n      // Promise-based getStats() (standard)\n      if (this._pc.getStats.length === 0 || this._isReactNativeWebrtc) {\n        this._pc.getStats().then(function (res) {\n          var reports = [];\n          res.forEach(function (report) {\n            reports.push(flattenValues(report));\n          });\n          cb(null, reports);\n        }, function (err) {\n          return cb(err);\n        });\n\n        // Single-parameter callback-based getStats() (non-standard)\n      } else if (this._pc.getStats.length > 0) {\n        this._pc.getStats(function (res) {\n          // If we destroy connection in `connect` callback this code might happen to run when actual connection is already closed\n          if (_this15.destroyed) return;\n          var reports = [];\n          res.result().forEach(function (result) {\n            var report = {};\n            result.names().forEach(function (name) {\n              report[name] = result.stat(name);\n            });\n            report.id = result.id;\n            report.type = result.type;\n            report.timestamp = result.timestamp;\n            reports.push(flattenValues(report));\n          });\n          cb(null, reports);\n        }, function (err) {\n          return cb(err);\n        });\n\n        // Unknown browser, skip getStats() since it's anyone's guess which style of\n        // getStats() they implement.\n      } else {\n        cb(null, []);\n      }\n    }\n  }, {\n    key: \"_maybeReady\",\n    value: function _maybeReady() {\n      var _this16 = this;\n      this._debug('maybeReady pc %s channel %s', this._pcReady, this._channelReady);\n      if (this._connected || this._connecting || !this._pcReady || !this._channelReady) return;\n      this._connecting = true;\n\n      // HACK: We can't rely on order here, for details see https://github.com/js-platform/node-webrtc/issues/339\n      var findCandidatePair = function findCandidatePair() {\n        if (_this16.destroyed) return;\n        _this16.getStats(function (err, items) {\n          if (_this16.destroyed) return;\n\n          // Treat getStats error as non-fatal. It's not essential.\n          if (err) items = [];\n          var remoteCandidates = {};\n          var localCandidates = {};\n          var candidatePairs = {};\n          var foundSelectedCandidatePair = false;\n          items.forEach(function (item) {\n            // TODO: Once all browsers support the hyphenated stats report types, remove\n            // the non-hypenated ones\n            if (item.type === 'remotecandidate' || item.type === 'remote-candidate') {\n              remoteCandidates[item.id] = item;\n            }\n            if (item.type === 'localcandidate' || item.type === 'local-candidate') {\n              localCandidates[item.id] = item;\n            }\n            if (item.type === 'candidatepair' || item.type === 'candidate-pair') {\n              candidatePairs[item.id] = item;\n            }\n          });\n          var setSelectedCandidatePair = function setSelectedCandidatePair(selectedCandidatePair) {\n            foundSelectedCandidatePair = true;\n            var local = localCandidates[selectedCandidatePair.localCandidateId];\n            if (local && (local.ip || local.address)) {\n              // Spec\n              _this16.localAddress = local.ip || local.address;\n              _this16.localPort = Number(local.port);\n            } else if (local && local.ipAddress) {\n              // Firefox\n              _this16.localAddress = local.ipAddress;\n              _this16.localPort = Number(local.portNumber);\n            } else if (typeof selectedCandidatePair.googLocalAddress === 'string') {\n              // TODO: remove this once Chrome 58 is released\n              local = selectedCandidatePair.googLocalAddress.split(':');\n              _this16.localAddress = local[0];\n              _this16.localPort = Number(local[1]);\n            }\n            if (_this16.localAddress) {\n              _this16.localFamily = _this16.localAddress.includes(':') ? 'IPv6' : 'IPv4';\n            }\n            var remote = remoteCandidates[selectedCandidatePair.remoteCandidateId];\n            if (remote && (remote.ip || remote.address)) {\n              // Spec\n              _this16.remoteAddress = remote.ip || remote.address;\n              _this16.remotePort = Number(remote.port);\n            } else if (remote && remote.ipAddress) {\n              // Firefox\n              _this16.remoteAddress = remote.ipAddress;\n              _this16.remotePort = Number(remote.portNumber);\n            } else if (typeof selectedCandidatePair.googRemoteAddress === 'string') {\n              // TODO: remove this once Chrome 58 is released\n              remote = selectedCandidatePair.googRemoteAddress.split(':');\n              _this16.remoteAddress = remote[0];\n              _this16.remotePort = Number(remote[1]);\n            }\n            if (_this16.remoteAddress) {\n              _this16.remoteFamily = _this16.remoteAddress.includes(':') ? 'IPv6' : 'IPv4';\n            }\n            _this16._debug('connect local: %s:%s remote: %s:%s', _this16.localAddress, _this16.localPort, _this16.remoteAddress, _this16.remotePort);\n          };\n          items.forEach(function (item) {\n            // Spec-compliant\n            if (item.type === 'transport' && item.selectedCandidatePairId) {\n              setSelectedCandidatePair(candidatePairs[item.selectedCandidatePairId]);\n            }\n\n            // Old implementations\n            if (item.type === 'googCandidatePair' && item.googActiveConnection === 'true' || (item.type === 'candidatepair' || item.type === 'candidate-pair') && item.selected) {\n              setSelectedCandidatePair(item);\n            }\n          });\n\n          // Ignore candidate pair selection in browsers like Safari 11 that do not have any local or remote candidates\n          // But wait until at least 1 candidate pair is available\n          if (!foundSelectedCandidatePair && (!Object.keys(candidatePairs).length || Object.keys(localCandidates).length)) {\n            setTimeout(findCandidatePair, 100);\n            return;\n          } else {\n            _this16._connecting = false;\n            _this16._connected = true;\n          }\n          if (_this16._chunk) {\n            try {\n              _this16.send(_this16._chunk);\n            } catch (err) {\n              return _this16.destroy(errCode(err, 'ERR_DATA_CHANNEL'));\n            }\n            _this16._chunk = null;\n            _this16._debug('sent chunk from \"write before connect\"');\n            var cb = _this16._cb;\n            _this16._cb = null;\n            cb(null);\n          }\n\n          // If `bufferedAmountLowThreshold` and 'onbufferedamountlow' are unsupported,\n          // fallback to using setInterval to implement backpressure.\n          if (typeof _this16._channel.bufferedAmountLowThreshold !== 'number') {\n            _this16._interval = setInterval(function () {\n              return _this16._onInterval();\n            }, 150);\n            if (_this16._interval.unref) _this16._interval.unref();\n          }\n          _this16._debug('connect');\n          _this16.emit('connect');\n        });\n      };\n      findCandidatePair();\n    }\n  }, {\n    key: \"_onInterval\",\n    value: function _onInterval() {\n      if (!this._cb || !this._channel || this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n        return;\n      }\n      this._onChannelBufferedAmountLow();\n    }\n  }, {\n    key: \"_onSignalingStateChange\",\n    value: function _onSignalingStateChange() {\n      var _this17 = this;\n      if (this.destroyed) return;\n      if (this._pc.signalingState === 'stable') {\n        this._isNegotiating = false;\n\n        // HACK: Firefox doesn't yet support removing tracks when signalingState !== 'stable'\n        this._debug('flushing sender queue', this._sendersAwaitingStable);\n        this._sendersAwaitingStable.forEach(function (sender) {\n          _this17._pc.removeTrack(sender);\n          _this17._queuedNegotiation = true;\n        });\n        this._sendersAwaitingStable = [];\n        if (this._queuedNegotiation) {\n          this._debug('flushing negotiation queue');\n          this._queuedNegotiation = false;\n          this._needsNegotiation(); // negotiate again\n        } else {\n          this._debug('negotiated');\n          this.emit('negotiated');\n        }\n      }\n      this._debug('signalingStateChange %s', this._pc.signalingState);\n      this.emit('signalingStateChange', this._pc.signalingState);\n    }\n  }, {\n    key: \"_onIceCandidate\",\n    value: function _onIceCandidate(event) {\n      if (this.destroyed) return;\n      if (event.candidate && this.trickle) {\n        this.emit('signal', {\n          type: 'candidate',\n          candidate: {\n            candidate: event.candidate.candidate,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            sdpMid: event.candidate.sdpMid\n          }\n        });\n      } else if (!event.candidate && !this._iceComplete) {\n        this._iceComplete = true;\n        this.emit('_iceComplete');\n      }\n      // as soon as we've received one valid candidate start timeout\n      if (event.candidate) {\n        this._startIceCompleteTimeout();\n      }\n    }\n  }, {\n    key: \"_onChannelMessage\",\n    value: function _onChannelMessage(event) {\n      if (this.destroyed) return;\n      var data = event.data;\n      if (data instanceof ArrayBuffer) data = Buffer.from(data);\n      this.push(data);\n    }\n  }, {\n    key: \"_onChannelBufferedAmountLow\",\n    value: function _onChannelBufferedAmountLow() {\n      if (this.destroyed || !this._cb) return;\n      this._debug('ending backpressure: bufferedAmount %d', this._channel.bufferedAmount);\n      var cb = this._cb;\n      this._cb = null;\n      cb(null);\n    }\n  }, {\n    key: \"_onChannelOpen\",\n    value: function _onChannelOpen() {\n      if (this._connected || this.destroyed) return;\n      this._debug('on channel open');\n      this._channelReady = true;\n      this._maybeReady();\n    }\n  }, {\n    key: \"_onChannelClose\",\n    value: function _onChannelClose() {\n      if (this.destroyed) return;\n      this._debug('on channel close');\n      this.destroy();\n    }\n  }, {\n    key: \"_onTrack\",\n    value: function _onTrack(event) {\n      var _this18 = this;\n      if (this.destroyed) return;\n      event.streams.forEach(function (eventStream) {\n        _this18._debug('on track');\n        _this18.emit('track', event.track, eventStream);\n        _this18._remoteTracks.push({\n          track: event.track,\n          stream: eventStream\n        });\n        if (_this18._remoteStreams.some(function (remoteStream) {\n          return remoteStream.id === eventStream.id;\n        })) return; // Only fire one 'stream' event, even though there may be multiple tracks per stream\n\n        _this18._remoteStreams.push(eventStream);\n        queueMicrotask(function () {\n          _this18._debug('on stream');\n          _this18.emit('stream', eventStream); // ensure all tracks have been added\n        });\n      });\n    }\n  }, {\n    key: \"_debug\",\n    value: function _debug() {\n      var args = [].slice.call(arguments);\n      args[0] = '[' + this._id + '] ' + args[0];\n      debug.apply(null, args);\n    }\n  }]);\n  return Peer;\n}(stream.Duplex);\nPeer.WEBRTC_SUPPORT = !!getBrowserRTC();\n\n/**\n * Expose peer and data channel config for overriding all Peer\n * instances. Otherwise, just set opts.config or opts.channelConfig\n * when constructing a Peer.\n */\nPeer.config = {\n  iceServers: [{\n    urls: ['stun:stun.l.google.com:19302', 'stun:global.stun.twilio.com:3478']\n  }],\n  sdpSemantics: 'unified-plan'\n};\nPeer.channelConfig = {};\nmodule.exports = Peer;","map":{"version":3,"names":["debug","require","getBrowserRTC","randombytes","stream","queueMicrotask","errCode","_require","Buffer","MAX_BUFFERED_AMOUNT","ICECOMPLETE_TIMEOUT","CHANNEL_CLOSING_TIMEOUT","filterTrickle","sdp","replace","warn","message","console","Peer","_stream$Duplex","_inherits","_super","_createSuper","opts","_this","_classCallCheck","Object","assign","allowHalfOpen","call","_id","toString","slice","_debug","channelName","initiator","channelConfig","channelNegotiated","negotiated","config","offerOptions","answerOptions","sdpTransform","streams","trickle","undefined","allowHalfTrickle","iceCompleteTimeout","destroyed","destroying","_connected","remoteAddress","remoteFamily","remotePort","localAddress","localFamily","localPort","_wrtc","wrtc","window","Error","_pcReady","_channelReady","_iceComplete","_iceCompleteTimer","_channel","_pendingCandidates","_isNegotiating","_firstNegotiation","_batchedNegotiation","_queuedNegotiation","_sendersAwaitingStable","_senderMap","Map","_closingInterval","_remoteTracks","_remoteStreams","_chunk","_cb","_interval","_pc","RTCPeerConnection","err","destroy","_possibleConstructorReturn","_isReactNativeWebrtc","_peerConnectionId","oniceconnectionstatechange","_onIceStateChange","onicegatheringstatechange","onconnectionstatechange","_onConnectionStateChange","onsignalingstatechange","_onSignalingStateChange","onicecandidate","event","_onIceCandidate","peerIdentity","catch","_setupData","channel","createDataChannel","ondatachannel","forEach","addStream","ontrack","_onTrack","_needsNegotiation","_onFinishBound","_onFinish","once","_createClass","key","get","bufferedAmount","readyState","value","address","port","family","signal","data","_this2","JSON","parse","renegotiate","transceiverRequest","addTransceiver","kind","init","candidate","remoteDescription","type","_addIceCandidate","push","setRemoteDescription","RTCSessionDescription","then","_createAnswer","_this3","iceCandidateObj","RTCIceCandidate","addIceCandidate","endsWith","send","chunk","emit","_this4","getTracks","track","addTrack","submap","sender","set","removed","replaceTrack","oldTrack","newTrack","removeTrack","name","removeStream","_this5","_this6","negotiate","_this7","setTimeout","_createOffer","_destroy","cb","_this8","readable","writable","_readableState","ended","_writableState","finished","end","clearInterval","removeListener","close","onmessage","onopen","onclose","onerror","_this9","binaryType","bufferedAmountLowThreshold","label","_onChannelMessage","onbufferedamountlow","_onChannelBufferedAmountLow","_onChannelOpen","_onChannelClose","error","concat","filename","lineno","colno","isClosing","setInterval","_read","_write","encoding","_this10","destroySoon","_startIceCompleteTimeout","_this11","_this12","createOffer","offer","sendOffer","localDescription","onSuccess","onError","setLocalDescription","_requestMissingTransceivers","_this13","getTransceivers","transceiver","mid","requested","_this14","createAnswer","answer","sendAnswer","connectionState","iceConnectionState","iceGatheringState","_maybeReady","getStats","_this15","flattenValues","report","prototype","values","length","res","reports","result","names","stat","id","timestamp","_this16","_connecting","findCandidatePair","items","remoteCandidates","localCandidates","candidatePairs","foundSelectedCandidatePair","item","setSelectedCandidatePair","selectedCandidatePair","local","localCandidateId","ip","Number","ipAddress","portNumber","googLocalAddress","split","includes","remote","remoteCandidateId","googRemoteAddress","selectedCandidatePairId","googActiveConnection","selected","keys","_onInterval","unref","_this17","signalingState","sdpMLineIndex","sdpMid","ArrayBuffer","from","_this18","eventStream","some","remoteStream","args","arguments","apply","Duplex","WEBRTC_SUPPORT","iceServers","urls","sdpSemantics","module","exports"],"sources":["C:/VideoChat/video-group-meeting-master/video-group-meeting-master/client/node_modules/simple-peer/index.js"],"sourcesContent":["/*! simple-peer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nconst debug = require('debug')('simple-peer')\nconst getBrowserRTC = require('get-browser-rtc')\nconst randombytes = require('randombytes')\nconst stream = require('readable-stream')\nconst queueMicrotask = require('queue-microtask') // TODO: remove when Node 10 is not supported\nconst errCode = require('err-code')\nconst { Buffer } = require('buffer')\n\nconst MAX_BUFFERED_AMOUNT = 64 * 1024\nconst ICECOMPLETE_TIMEOUT = 5 * 1000\nconst CHANNEL_CLOSING_TIMEOUT = 5 * 1000\n\n// HACK: Filter trickle lines when trickle is disabled #354\nfunction filterTrickle (sdp) {\n  return sdp.replace(/a=ice-options:trickle\\s\\n/g, '')\n}\n\nfunction warn (message) {\n  console.warn(message)\n}\n\n/**\n * WebRTC peer connection. Same API as node core `net.Socket`, plus a few extra methods.\n * Duplex stream.\n * @param {Object} opts\n */\nclass Peer extends stream.Duplex {\n  constructor (opts) {\n    opts = Object.assign({\n      allowHalfOpen: false\n    }, opts)\n\n    super(opts)\n\n    this._id = randombytes(4).toString('hex').slice(0, 7)\n    this._debug('new peer %o', opts)\n\n    this.channelName = opts.initiator\n      ? opts.channelName || randombytes(20).toString('hex')\n      : null\n\n    this.initiator = opts.initiator || false\n    this.channelConfig = opts.channelConfig || Peer.channelConfig\n    this.channelNegotiated = this.channelConfig.negotiated\n    this.config = Object.assign({}, Peer.config, opts.config)\n    this.offerOptions = opts.offerOptions || {}\n    this.answerOptions = opts.answerOptions || {}\n    this.sdpTransform = opts.sdpTransform || (sdp => sdp)\n    this.streams = opts.streams || (opts.stream ? [opts.stream] : []) // support old \"stream\" option\n    this.trickle = opts.trickle !== undefined ? opts.trickle : true\n    this.allowHalfTrickle = opts.allowHalfTrickle !== undefined ? opts.allowHalfTrickle : false\n    this.iceCompleteTimeout = opts.iceCompleteTimeout || ICECOMPLETE_TIMEOUT\n\n    this.destroyed = false\n    this.destroying = false\n    this._connected = false\n\n    this.remoteAddress = undefined\n    this.remoteFamily = undefined\n    this.remotePort = undefined\n    this.localAddress = undefined\n    this.localFamily = undefined\n    this.localPort = undefined\n\n    this._wrtc = (opts.wrtc && typeof opts.wrtc === 'object')\n      ? opts.wrtc\n      : getBrowserRTC()\n\n    if (!this._wrtc) {\n      if (typeof window === 'undefined') {\n        throw errCode(new Error('No WebRTC support: Specify `opts.wrtc` option in this environment'), 'ERR_WEBRTC_SUPPORT')\n      } else {\n        throw errCode(new Error('No WebRTC support: Not a supported browser'), 'ERR_WEBRTC_SUPPORT')\n      }\n    }\n\n    this._pcReady = false\n    this._channelReady = false\n    this._iceComplete = false // ice candidate trickle done (got null candidate)\n    this._iceCompleteTimer = null // send an offer/answer anyway after some timeout\n    this._channel = null\n    this._pendingCandidates = []\n\n    this._isNegotiating = false // is this peer waiting for negotiation to complete?\n    this._firstNegotiation = true\n    this._batchedNegotiation = false // batch synchronous negotiations\n    this._queuedNegotiation = false // is there a queued negotiation request?\n    this._sendersAwaitingStable = []\n    this._senderMap = new Map()\n    this._closingInterval = null\n\n    this._remoteTracks = []\n    this._remoteStreams = []\n\n    this._chunk = null\n    this._cb = null\n    this._interval = null\n\n    try {\n      this._pc = new (this._wrtc.RTCPeerConnection)(this.config)\n    } catch (err) {\n      this.destroy(errCode(err, 'ERR_PC_CONSTRUCTOR'))\n      return\n    }\n\n    // We prefer feature detection whenever possible, but sometimes that's not\n    // possible for certain implementations.\n    this._isReactNativeWebrtc = typeof this._pc._peerConnectionId === 'number'\n\n    this._pc.oniceconnectionstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onicegatheringstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onconnectionstatechange = () => {\n      this._onConnectionStateChange()\n    }\n    this._pc.onsignalingstatechange = () => {\n      this._onSignalingStateChange()\n    }\n    this._pc.onicecandidate = event => {\n      this._onIceCandidate(event)\n    }\n\n    // HACK: Fix for odd Firefox behavior, see: https://github.com/feross/simple-peer/pull/783\n    if (typeof this._pc.peerIdentity === 'object') {\n      this._pc.peerIdentity.catch(err => {\n        this.destroy(errCode(err, 'ERR_PC_PEER_IDENTITY'))\n      })\n    }\n\n    // Other spec events, unused by this implementation:\n    // - onconnectionstatechange\n    // - onicecandidateerror\n    // - onfingerprintfailure\n    // - onnegotiationneeded\n\n    if (this.initiator || this.channelNegotiated) {\n      this._setupData({\n        channel: this._pc.createDataChannel(this.channelName, this.channelConfig)\n      })\n    } else {\n      this._pc.ondatachannel = event => {\n        this._setupData(event)\n      }\n    }\n\n    if (this.streams) {\n      this.streams.forEach(stream => {\n        this.addStream(stream)\n      })\n    }\n    this._pc.ontrack = event => {\n      this._onTrack(event)\n    }\n\n    this._debug('initial negotiation')\n    this._needsNegotiation()\n\n    this._onFinishBound = () => {\n      this._onFinish()\n    }\n    this.once('finish', this._onFinishBound)\n  }\n\n  get bufferSize () {\n    return (this._channel && this._channel.bufferedAmount) || 0\n  }\n\n  // HACK: it's possible channel.readyState is \"closing\" before peer.destroy() fires\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n  get connected () {\n    return (this._connected && this._channel.readyState === 'open')\n  }\n\n  address () {\n    return { port: this.localPort, family: this.localFamily, address: this.localAddress }\n  }\n\n  signal (data) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot signal after peer is destroyed'), 'ERR_DESTROYED')\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data)\n      } catch (err) {\n        data = {}\n      }\n    }\n    this._debug('signal()')\n\n    if (data.renegotiate && this.initiator) {\n      this._debug('got request to renegotiate')\n      this._needsNegotiation()\n    }\n    if (data.transceiverRequest && this.initiator) {\n      this._debug('got request for transceiver')\n      this.addTransceiver(data.transceiverRequest.kind, data.transceiverRequest.init)\n    }\n    if (data.candidate) {\n      if (this._pc.remoteDescription && this._pc.remoteDescription.type) {\n        this._addIceCandidate(data.candidate)\n      } else {\n        this._pendingCandidates.push(data.candidate)\n      }\n    }\n    if (data.sdp) {\n      this._pc.setRemoteDescription(new (this._wrtc.RTCSessionDescription)(data))\n        .then(() => {\n          if (this.destroyed) return\n\n          this._pendingCandidates.forEach(candidate => {\n            this._addIceCandidate(candidate)\n          })\n          this._pendingCandidates = []\n\n          if (this._pc.remoteDescription.type === 'offer') this._createAnswer()\n        })\n        .catch(err => {\n          this.destroy(errCode(err, 'ERR_SET_REMOTE_DESCRIPTION'))\n        })\n    }\n    if (!data.sdp && !data.candidate && !data.renegotiate && !data.transceiverRequest) {\n      this.destroy(errCode(new Error('signal() called with invalid signal data'), 'ERR_SIGNALING'))\n    }\n  }\n\n  _addIceCandidate (candidate) {\n    const iceCandidateObj = new this._wrtc.RTCIceCandidate(candidate)\n    this._pc.addIceCandidate(iceCandidateObj)\n      .catch(err => {\n        if (!iceCandidateObj.address || iceCandidateObj.address.endsWith('.local')) {\n          warn('Ignoring unsupported ICE candidate.')\n        } else {\n          this.destroy(errCode(err, 'ERR_ADD_ICE_CANDIDATE'))\n        }\n      })\n  }\n\n  /**\n   * Send text/binary data to the remote peer.\n   * @param {ArrayBufferView|ArrayBuffer|Buffer|string|Blob} chunk\n   */\n  send (chunk) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot send after peer is destroyed'), 'ERR_DESTROYED')\n    this._channel.send(chunk)\n  }\n\n  /**\n   * Add a Transceiver to the connection.\n   * @param {String} kind\n   * @param {Object} init\n   */\n  addTransceiver (kind, init) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addTransceiver after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addTransceiver()')\n\n    if (this.initiator) {\n      try {\n        this._pc.addTransceiver(kind, init)\n        this._needsNegotiation()\n      } catch (err) {\n        this.destroy(errCode(err, 'ERR_ADD_TRANSCEIVER'))\n      }\n    } else {\n      this.emit('signal', { // request initiator to renegotiate\n        type: 'transceiverRequest',\n        transceiverRequest: { kind, init }\n      })\n    }\n  }\n\n  /**\n   * Add a MediaStream to the connection.\n   * @param {MediaStream} stream\n   */\n  addStream (stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addStream after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addStream()')\n\n    stream.getTracks().forEach(track => {\n      this.addTrack(track, stream)\n    })\n  }\n\n  /**\n   * Add a MediaStreamTrack to the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  addTrack (track, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addTrack()')\n\n    const submap = this._senderMap.get(track) || new Map() // nested Maps map [track, stream] to sender\n    let sender = submap.get(stream)\n    if (!sender) {\n      sender = this._pc.addTrack(track, stream)\n      submap.set(stream, sender)\n      this._senderMap.set(track, submap)\n      this._needsNegotiation()\n    } else if (sender.removed) {\n      throw errCode(new Error('Track has been removed. You should enable/disable tracks that you want to re-add.'), 'ERR_SENDER_REMOVED')\n    } else {\n      throw errCode(new Error('Track has already been added to that stream.'), 'ERR_SENDER_ALREADY_ADDED')\n    }\n  }\n\n  /**\n   * Replace a MediaStreamTrack by another in the connection.\n   * @param {MediaStreamTrack} oldTrack\n   * @param {MediaStreamTrack} newTrack\n   * @param {MediaStream} stream\n   */\n  replaceTrack (oldTrack, newTrack, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot replaceTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('replaceTrack()')\n\n    const submap = this._senderMap.get(oldTrack)\n    const sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw errCode(new Error('Cannot replace track that was never added.'), 'ERR_TRACK_NOT_ADDED')\n    }\n    if (newTrack) this._senderMap.set(newTrack, submap)\n\n    if (sender.replaceTrack != null) {\n      sender.replaceTrack(newTrack)\n    } else {\n      this.destroy(errCode(new Error('replaceTrack is not supported in this browser'), 'ERR_UNSUPPORTED_REPLACETRACK'))\n    }\n  }\n\n  /**\n   * Remove a MediaStreamTrack from the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  removeTrack (track, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot removeTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('removeSender()')\n\n    const submap = this._senderMap.get(track)\n    const sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw errCode(new Error('Cannot remove track that was never added.'), 'ERR_TRACK_NOT_ADDED')\n    }\n    try {\n      sender.removed = true\n      this._pc.removeTrack(sender)\n    } catch (err) {\n      if (err.name === 'NS_ERROR_UNEXPECTED') {\n        this._sendersAwaitingStable.push(sender) // HACK: Firefox must wait until (signalingState === stable) https://bugzilla.mozilla.org/show_bug.cgi?id=1133874\n      } else {\n        this.destroy(errCode(err, 'ERR_REMOVE_TRACK'))\n      }\n    }\n    this._needsNegotiation()\n  }\n\n  /**\n   * Remove a MediaStream from the connection.\n   * @param {MediaStream} stream\n   */\n  removeStream (stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot removeStream after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('removeSenders()')\n\n    stream.getTracks().forEach(track => {\n      this.removeTrack(track, stream)\n    })\n  }\n\n  _needsNegotiation () {\n    this._debug('_needsNegotiation')\n    if (this._batchedNegotiation) return // batch synchronous renegotiations\n    this._batchedNegotiation = true\n    queueMicrotask(() => {\n      this._batchedNegotiation = false\n      if (this.initiator || !this._firstNegotiation) {\n        this._debug('starting batched negotiation')\n        this.negotiate()\n      } else {\n        this._debug('non-initiator initial negotiation request discarded')\n      }\n      this._firstNegotiation = false\n    })\n  }\n\n  negotiate () {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot negotiate after peer is destroyed'), 'ERR_DESTROYED')\n\n    if (this.initiator) {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true\n        this._debug('already negotiating, queueing')\n      } else {\n        this._debug('start negotiation')\n        setTimeout(() => { // HACK: Chrome crashes if we immediately call createOffer\n          this._createOffer()\n        }, 0)\n      }\n    } else {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true\n        this._debug('already negotiating, queueing')\n      } else {\n        this._debug('requesting negotiation from initiator')\n        this.emit('signal', { // request initiator to renegotiate\n          type: 'renegotiate',\n          renegotiate: true\n        })\n      }\n    }\n    this._isNegotiating = true\n  }\n\n  // TODO: Delete this method once readable-stream is updated to contain a default\n  // implementation of destroy() that automatically calls _destroy()\n  // See: https://github.com/nodejs/readable-stream/issues/283\n  destroy (err) {\n    this._destroy(err, () => {})\n  }\n\n  _destroy (err, cb) {\n    if (this.destroyed || this.destroying) return\n    this.destroying = true\n\n    this._debug('destroying (error: %s)', err && (err.message || err))\n\n    queueMicrotask(() => { // allow events concurrent with the call to _destroy() to fire (see #692)\n      this.destroyed = true\n      this.destroying = false\n\n      this._debug('destroy (error: %s)', err && (err.message || err))\n\n      this.readable = this.writable = false\n\n      if (!this._readableState.ended) this.push(null)\n      if (!this._writableState.finished) this.end()\n\n      this._connected = false\n      this._pcReady = false\n      this._channelReady = false\n      this._remoteTracks = null\n      this._remoteStreams = null\n      this._senderMap = null\n\n      clearInterval(this._closingInterval)\n      this._closingInterval = null\n\n      clearInterval(this._interval)\n      this._interval = null\n      this._chunk = null\n      this._cb = null\n\n      if (this._onFinishBound) this.removeListener('finish', this._onFinishBound)\n      this._onFinishBound = null\n\n      if (this._channel) {\n        try {\n          this._channel.close()\n        } catch (err) {}\n\n        // allow events concurrent with destruction to be handled\n        this._channel.onmessage = null\n        this._channel.onopen = null\n        this._channel.onclose = null\n        this._channel.onerror = null\n      }\n      if (this._pc) {\n        try {\n          this._pc.close()\n        } catch (err) {}\n\n        // allow events concurrent with destruction to be handled\n        this._pc.oniceconnectionstatechange = null\n        this._pc.onicegatheringstatechange = null\n        this._pc.onsignalingstatechange = null\n        this._pc.onicecandidate = null\n        this._pc.ontrack = null\n        this._pc.ondatachannel = null\n      }\n      this._pc = null\n      this._channel = null\n\n      if (err) this.emit('error', err)\n      this.emit('close')\n      cb()\n    })\n  }\n\n  _setupData (event) {\n    if (!event.channel) {\n      // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n      // which is invalid behavior. Handle it gracefully.\n      // See: https://github.com/feross/simple-peer/issues/163\n      return this.destroy(errCode(new Error('Data channel event is missing `channel` property'), 'ERR_DATA_CHANNEL'))\n    }\n\n    this._channel = event.channel\n    this._channel.binaryType = 'arraybuffer'\n\n    if (typeof this._channel.bufferedAmountLowThreshold === 'number') {\n      this._channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT\n    }\n\n    this.channelName = this._channel.label\n\n    this._channel.onmessage = event => {\n      this._onChannelMessage(event)\n    }\n    this._channel.onbufferedamountlow = () => {\n      this._onChannelBufferedAmountLow()\n    }\n    this._channel.onopen = () => {\n      this._onChannelOpen()\n    }\n    this._channel.onclose = () => {\n      this._onChannelClose()\n    }\n    this._channel.onerror = event => {\n      const err = event.error instanceof Error\n        ? event.error\n        : new Error(`Datachannel error: ${event.message} ${event.filename}:${event.lineno}:${event.colno}`)\n      this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n    }\n\n    // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n    let isClosing = false\n    this._closingInterval = setInterval(() => { // No \"onclosing\" event\n      if (this._channel && this._channel.readyState === 'closing') {\n        if (isClosing) this._onChannelClose() // closing timed out: equivalent to onclose firing\n        isClosing = true\n      } else {\n        isClosing = false\n      }\n    }, CHANNEL_CLOSING_TIMEOUT)\n  }\n\n  _read () {}\n\n  _write (chunk, encoding, cb) {\n    if (this.destroyed) return cb(errCode(new Error('cannot write after peer is destroyed'), 'ERR_DATA_CHANNEL'))\n\n    if (this._connected) {\n      try {\n        this.send(chunk)\n      } catch (err) {\n        return this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n      }\n      if (this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n        this._debug('start backpressure: bufferedAmount %d', this._channel.bufferedAmount)\n        this._cb = cb\n      } else {\n        cb(null)\n      }\n    } else {\n      this._debug('write before connect')\n      this._chunk = chunk\n      this._cb = cb\n    }\n  }\n\n  // When stream finishes writing, close socket. Half open connections are not\n  // supported.\n  _onFinish () {\n    if (this.destroyed) return\n\n    // Wait a bit before destroying so the socket flushes.\n    // TODO: is there a more reliable way to accomplish this?\n    const destroySoon = () => {\n      setTimeout(() => this.destroy(), 1000)\n    }\n\n    if (this._connected) {\n      destroySoon()\n    } else {\n      this.once('connect', destroySoon)\n    }\n  }\n\n  _startIceCompleteTimeout () {\n    if (this.destroyed) return\n    if (this._iceCompleteTimer) return\n    this._debug('started iceComplete timeout')\n    this._iceCompleteTimer = setTimeout(() => {\n      if (!this._iceComplete) {\n        this._iceComplete = true\n        this._debug('iceComplete timeout completed')\n        this.emit('iceTimeout')\n        this.emit('_iceComplete')\n      }\n    }, this.iceCompleteTimeout)\n  }\n\n  _createOffer () {\n    if (this.destroyed) return\n\n    this._pc.createOffer(this.offerOptions)\n      .then(offer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) offer.sdp = filterTrickle(offer.sdp)\n        offer.sdp = this.sdpTransform(offer.sdp)\n\n        const sendOffer = () => {\n          if (this.destroyed) return\n          const signal = this._pc.localDescription || offer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n        }\n\n        const onSuccess = () => {\n          this._debug('createOffer success')\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendOffer()\n          else this.once('_iceComplete', sendOffer) // wait for candidates\n        }\n\n        const onError = err => {\n          this.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(offer)\n          .then(onSuccess)\n          .catch(onError)\n      })\n      .catch(err => {\n        this.destroy(errCode(err, 'ERR_CREATE_OFFER'))\n      })\n  }\n\n  _requestMissingTransceivers () {\n    if (this._pc.getTransceivers) {\n      this._pc.getTransceivers().forEach(transceiver => {\n        if (!transceiver.mid && transceiver.sender.track && !transceiver.requested) {\n          transceiver.requested = true // HACK: Safari returns negotiated transceivers with a null mid\n          this.addTransceiver(transceiver.sender.track.kind)\n        }\n      })\n    }\n  }\n\n  _createAnswer () {\n    if (this.destroyed) return\n\n    this._pc.createAnswer(this.answerOptions)\n      .then(answer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) answer.sdp = filterTrickle(answer.sdp)\n        answer.sdp = this.sdpTransform(answer.sdp)\n\n        const sendAnswer = () => {\n          if (this.destroyed) return\n          const signal = this._pc.localDescription || answer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n          if (!this.initiator) this._requestMissingTransceivers()\n        }\n\n        const onSuccess = () => {\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendAnswer()\n          else this.once('_iceComplete', sendAnswer)\n        }\n\n        const onError = err => {\n          this.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(answer)\n          .then(onSuccess)\n          .catch(onError)\n      })\n      .catch(err => {\n        this.destroy(errCode(err, 'ERR_CREATE_ANSWER'))\n      })\n  }\n\n  _onConnectionStateChange () {\n    if (this.destroyed) return\n    if (this._pc.connectionState === 'failed') {\n      this.destroy(errCode(new Error('Connection failed.'), 'ERR_CONNECTION_FAILURE'))\n    }\n  }\n\n  _onIceStateChange () {\n    if (this.destroyed) return\n    const iceConnectionState = this._pc.iceConnectionState\n    const iceGatheringState = this._pc.iceGatheringState\n\n    this._debug(\n      'iceStateChange (connection: %s) (gathering: %s)',\n      iceConnectionState,\n      iceGatheringState\n    )\n    this.emit('iceStateChange', iceConnectionState, iceGatheringState)\n\n    if (iceConnectionState === 'connected' || iceConnectionState === 'completed') {\n      this._pcReady = true\n      this._maybeReady()\n    }\n    if (iceConnectionState === 'failed') {\n      this.destroy(errCode(new Error('Ice connection failed.'), 'ERR_ICE_CONNECTION_FAILURE'))\n    }\n    if (iceConnectionState === 'closed') {\n      this.destroy(errCode(new Error('Ice connection closed.'), 'ERR_ICE_CONNECTION_CLOSED'))\n    }\n  }\n\n  getStats (cb) {\n    // statreports can come with a value array instead of properties\n    const flattenValues = report => {\n      if (Object.prototype.toString.call(report.values) === '[object Array]') {\n        report.values.forEach(value => {\n          Object.assign(report, value)\n        })\n      }\n      return report\n    }\n\n    // Promise-based getStats() (standard)\n    if (this._pc.getStats.length === 0 || this._isReactNativeWebrtc) {\n      this._pc.getStats()\n        .then(res => {\n          const reports = []\n          res.forEach(report => {\n            reports.push(flattenValues(report))\n          })\n          cb(null, reports)\n        }, err => cb(err))\n\n    // Single-parameter callback-based getStats() (non-standard)\n    } else if (this._pc.getStats.length > 0) {\n      this._pc.getStats(res => {\n        // If we destroy connection in `connect` callback this code might happen to run when actual connection is already closed\n        if (this.destroyed) return\n\n        const reports = []\n        res.result().forEach(result => {\n          const report = {}\n          result.names().forEach(name => {\n            report[name] = result.stat(name)\n          })\n          report.id = result.id\n          report.type = result.type\n          report.timestamp = result.timestamp\n          reports.push(flattenValues(report))\n        })\n        cb(null, reports)\n      }, err => cb(err))\n\n    // Unknown browser, skip getStats() since it's anyone's guess which style of\n    // getStats() they implement.\n    } else {\n      cb(null, [])\n    }\n  }\n\n  _maybeReady () {\n    this._debug('maybeReady pc %s channel %s', this._pcReady, this._channelReady)\n    if (this._connected || this._connecting || !this._pcReady || !this._channelReady) return\n\n    this._connecting = true\n\n    // HACK: We can't rely on order here, for details see https://github.com/js-platform/node-webrtc/issues/339\n    const findCandidatePair = () => {\n      if (this.destroyed) return\n\n      this.getStats((err, items) => {\n        if (this.destroyed) return\n\n        // Treat getStats error as non-fatal. It's not essential.\n        if (err) items = []\n\n        const remoteCandidates = {}\n        const localCandidates = {}\n        const candidatePairs = {}\n        let foundSelectedCandidatePair = false\n\n        items.forEach(item => {\n          // TODO: Once all browsers support the hyphenated stats report types, remove\n          // the non-hypenated ones\n          if (item.type === 'remotecandidate' || item.type === 'remote-candidate') {\n            remoteCandidates[item.id] = item\n          }\n          if (item.type === 'localcandidate' || item.type === 'local-candidate') {\n            localCandidates[item.id] = item\n          }\n          if (item.type === 'candidatepair' || item.type === 'candidate-pair') {\n            candidatePairs[item.id] = item\n          }\n        })\n\n        const setSelectedCandidatePair = selectedCandidatePair => {\n          foundSelectedCandidatePair = true\n\n          let local = localCandidates[selectedCandidatePair.localCandidateId]\n\n          if (local && (local.ip || local.address)) {\n            // Spec\n            this.localAddress = local.ip || local.address\n            this.localPort = Number(local.port)\n          } else if (local && local.ipAddress) {\n            // Firefox\n            this.localAddress = local.ipAddress\n            this.localPort = Number(local.portNumber)\n          } else if (typeof selectedCandidatePair.googLocalAddress === 'string') {\n            // TODO: remove this once Chrome 58 is released\n            local = selectedCandidatePair.googLocalAddress.split(':')\n            this.localAddress = local[0]\n            this.localPort = Number(local[1])\n          }\n          if (this.localAddress) {\n            this.localFamily = this.localAddress.includes(':') ? 'IPv6' : 'IPv4'\n          }\n\n          let remote = remoteCandidates[selectedCandidatePair.remoteCandidateId]\n\n          if (remote && (remote.ip || remote.address)) {\n            // Spec\n            this.remoteAddress = remote.ip || remote.address\n            this.remotePort = Number(remote.port)\n          } else if (remote && remote.ipAddress) {\n            // Firefox\n            this.remoteAddress = remote.ipAddress\n            this.remotePort = Number(remote.portNumber)\n          } else if (typeof selectedCandidatePair.googRemoteAddress === 'string') {\n            // TODO: remove this once Chrome 58 is released\n            remote = selectedCandidatePair.googRemoteAddress.split(':')\n            this.remoteAddress = remote[0]\n            this.remotePort = Number(remote[1])\n          }\n          if (this.remoteAddress) {\n            this.remoteFamily = this.remoteAddress.includes(':') ? 'IPv6' : 'IPv4'\n          }\n\n          this._debug(\n            'connect local: %s:%s remote: %s:%s',\n            this.localAddress,\n            this.localPort,\n            this.remoteAddress,\n            this.remotePort\n          )\n        }\n\n        items.forEach(item => {\n          // Spec-compliant\n          if (item.type === 'transport' && item.selectedCandidatePairId) {\n            setSelectedCandidatePair(candidatePairs[item.selectedCandidatePairId])\n          }\n\n          // Old implementations\n          if (\n            (item.type === 'googCandidatePair' && item.googActiveConnection === 'true') ||\n            ((item.type === 'candidatepair' || item.type === 'candidate-pair') && item.selected)\n          ) {\n            setSelectedCandidatePair(item)\n          }\n        })\n\n        // Ignore candidate pair selection in browsers like Safari 11 that do not have any local or remote candidates\n        // But wait until at least 1 candidate pair is available\n        if (!foundSelectedCandidatePair && (!Object.keys(candidatePairs).length || Object.keys(localCandidates).length)) {\n          setTimeout(findCandidatePair, 100)\n          return\n        } else {\n          this._connecting = false\n          this._connected = true\n        }\n\n        if (this._chunk) {\n          try {\n            this.send(this._chunk)\n          } catch (err) {\n            return this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n          }\n          this._chunk = null\n          this._debug('sent chunk from \"write before connect\"')\n\n          const cb = this._cb\n          this._cb = null\n          cb(null)\n        }\n\n        // If `bufferedAmountLowThreshold` and 'onbufferedamountlow' are unsupported,\n        // fallback to using setInterval to implement backpressure.\n        if (typeof this._channel.bufferedAmountLowThreshold !== 'number') {\n          this._interval = setInterval(() => this._onInterval(), 150)\n          if (this._interval.unref) this._interval.unref()\n        }\n\n        this._debug('connect')\n        this.emit('connect')\n      })\n    }\n    findCandidatePair()\n  }\n\n  _onInterval () {\n    if (!this._cb || !this._channel || this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n      return\n    }\n    this._onChannelBufferedAmountLow()\n  }\n\n  _onSignalingStateChange () {\n    if (this.destroyed) return\n\n    if (this._pc.signalingState === 'stable') {\n      this._isNegotiating = false\n\n      // HACK: Firefox doesn't yet support removing tracks when signalingState !== 'stable'\n      this._debug('flushing sender queue', this._sendersAwaitingStable)\n      this._sendersAwaitingStable.forEach(sender => {\n        this._pc.removeTrack(sender)\n        this._queuedNegotiation = true\n      })\n      this._sendersAwaitingStable = []\n\n      if (this._queuedNegotiation) {\n        this._debug('flushing negotiation queue')\n        this._queuedNegotiation = false\n        this._needsNegotiation() // negotiate again\n      } else {\n        this._debug('negotiated')\n        this.emit('negotiated')\n      }\n    }\n\n    this._debug('signalingStateChange %s', this._pc.signalingState)\n    this.emit('signalingStateChange', this._pc.signalingState)\n  }\n\n  _onIceCandidate (event) {\n    if (this.destroyed) return\n    if (event.candidate && this.trickle) {\n      this.emit('signal', {\n        type: 'candidate',\n        candidate: {\n          candidate: event.candidate.candidate,\n          sdpMLineIndex: event.candidate.sdpMLineIndex,\n          sdpMid: event.candidate.sdpMid\n        }\n      })\n    } else if (!event.candidate && !this._iceComplete) {\n      this._iceComplete = true\n      this.emit('_iceComplete')\n    }\n    // as soon as we've received one valid candidate start timeout\n    if (event.candidate) {\n      this._startIceCompleteTimeout()\n    }\n  }\n\n  _onChannelMessage (event) {\n    if (this.destroyed) return\n    let data = event.data\n    if (data instanceof ArrayBuffer) data = Buffer.from(data)\n    this.push(data)\n  }\n\n  _onChannelBufferedAmountLow () {\n    if (this.destroyed || !this._cb) return\n    this._debug('ending backpressure: bufferedAmount %d', this._channel.bufferedAmount)\n    const cb = this._cb\n    this._cb = null\n    cb(null)\n  }\n\n  _onChannelOpen () {\n    if (this._connected || this.destroyed) return\n    this._debug('on channel open')\n    this._channelReady = true\n    this._maybeReady()\n  }\n\n  _onChannelClose () {\n    if (this.destroyed) return\n    this._debug('on channel close')\n    this.destroy()\n  }\n\n  _onTrack (event) {\n    if (this.destroyed) return\n\n    event.streams.forEach(eventStream => {\n      this._debug('on track')\n      this.emit('track', event.track, eventStream)\n\n      this._remoteTracks.push({\n        track: event.track,\n        stream: eventStream\n      })\n\n      if (this._remoteStreams.some(remoteStream => {\n        return remoteStream.id === eventStream.id\n      })) return // Only fire one 'stream' event, even though there may be multiple tracks per stream\n\n      this._remoteStreams.push(eventStream)\n      queueMicrotask(() => {\n        this._debug('on stream')\n        this.emit('stream', eventStream) // ensure all tracks have been added\n      })\n    })\n  }\n\n  _debug () {\n    const args = [].slice.call(arguments)\n    args[0] = '[' + this._id + '] ' + args[0]\n    debug.apply(null, args)\n  }\n}\n\nPeer.WEBRTC_SUPPORT = !!getBrowserRTC()\n\n/**\n * Expose peer and data channel config for overriding all Peer\n * instances. Otherwise, just set opts.config or opts.channelConfig\n * when constructing a Peer.\n */\nPeer.config = {\n  iceServers: [\n    {\n      urls: [\n        'stun:stun.l.google.com:19302',\n        'stun:global.stun.twilio.com:3478'\n      ]\n    }\n  ],\n  sdpSemantics: 'unified-plan'\n}\n\nPeer.channelConfig = {}\n\nmodule.exports = Peer\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}